<init> 1 0
f_0 0 0
f_1 1 0
fa_1 1 0
f_1_1 2 0
fa_1_1 2 0
f_2 2 0
<init> 1 0
id_1 1 0
<init> 0 0
$init$ 0 0
choiceProfunctor 1 1
monadBind 1 1
monadApplicative 1 1
monadApply 1 1
monadFunctor 1 1
monoidSemigroup 1 1
traversableFoldable 1 1
categoryComposable 1 1
comonadCobind 1 1
$init$ 0 0
bindApply 1 1
bindFunctor 1 1
strongProfunctor 1 1
$init$ 0 0
applicativeApply 1 1
applicativeFunctor 1 1
$init$ 0 0
applyFunctor 1 1
$init$ 0 0
traversableFunctor 1 1
$init$ 0 0
Applicative 1 1
Apply 1 1
Bind 1 1
Category 1 1
Choice 1 1
Cobind 1 1
Comonad 1 1
Compose 1 1
Foldable 1 1
Functor 1 1
InvariantFunctor 1 1
IsContravariant 1 1
IsCovariant 1 1
Monad 1 1
Monoid 1 1
Phantom 1 1
Profunctor 1 1
Semigroup 1 1
Show 1 1
Strong 1 1
Traversable 1 1
$init$ 0 0
$init$ 0 0
<init> 0 0
<init> 0 0
<init> 0 0
<init> 0 0
compose 1 0
$less$less$less 1 0
$greater$greater$greater 1 0
$colon$plus 1 0
$plus$colon 1 0
foldLeft 2 0
foldRight 2 0
fold 1 1
<init> 0 0
<init> 1 0
<init> 2 0
lift 1 0
<init> 0 0
$colon$colon 1 0
$plus$colon 1 0
$colon$colon$colon 1 0
reverse 0 0
reverse_$colon$colon$colon 1 0
foldLeft 2 0
foldRight 2 0
fold 1 1
foldMaybe 1 1
foldMap 2 1
foldMapMaybe 2 1
map 1 0
flatMap 1 0
size 0 0
toString 0 0
mkString 3 0
<init> 2 0
<init> 0 0
subst 1 0
unsubst 1 0
leibniz 0 0
<init> 0 0
apply 0 0
apply 1 0
empty 0 0
nil 0 0
<init> 0 0
head 0 0
tail 0 0
$colon$colon 1 0
$colon$plus 1 0
$colon$colon$colon 1 0
$colon$plus$plus 1 0
reverse_$colon$colon$colon 1 0
reverse 0 0
$colon$colon$colon 1 0
reverse_$colon$colon$colon 1 0
uncons 0 0
foldLeft 2 0
foldLeft1 2 0
foldRight 2 0
foldRight1 2 0
fold 1 1
foldMap 2 1
map 1 0
flatMap 1 0
size 0 0
toList 0 0
toString 0 0
<init> 2 0
<init> 0 0
apply 1 0
op 1 0
<init> 0 0
<init> 1 0
<init> 0 0
subst 1 0
unsubst 1 0
leibniz 0 0
<init> 0 0
empty 0 0
none 0 0
$init$ 0 0
amaybeShow 1 1
<init> 0 0
<init> 0 0
apply 2 0
unapply 1 0
of 0 0
<init> 0 0
apply 2 0
<init> 0 0
substCv 1 0
substCt 1 0
apply 1 0
andThen 1 0
compose 1 0
coerce 1 0
liftCv 0 0
liftCt 0 0
liftCvCv 0 0
liftCvCt 0 0
liftCtCv 0 0
liftCtCt 0 0
and 1 0
onCvF 1 0
onCtF 1 0
<init> 0 0
apply 1 1
<init> 0 0
substCv 1 0
refl 0 0
reify 0 0
liftCvCv 2 0
liftCvCt 2 0
liftCtCv 2 0
liftCtCt 2 0
<init> 1 0
apply 1 0
<init> 1 0
apply 1 0
<init> 1 0
apply 1 0
<init> 1 0
apply 1 0
pair 2 0
<init> 2 0
liftCvCv 0 0
liftCvCt 0 0
liftCtCv 0 0
liftCtCt 0 0
substCvCv 1 0
substCtCv 1 0
substCvCt 1 0
substCtCt 1 0
bracket 2 0
fromPredef 1 0
unsafeForce 0 0
$init$ 0 0
witness 1 0
$init$ 0 0
<init> 1 0
liftCvF 1 1
liftCtF 1 1
substCvF 2 1
substCtF 2 1
<init> 1 0
retag 0 0
<init> 0 0
$init$ 0 0
constTraverse 0 0
constFunctor 0 0
constApply 1 1
constApplicative 1 1
constSemigroup 1 1
constMonoid 1 1
constShow 1 1
$init$ 0 0
fold 2 0
<init> 0 0
<init> 0 0
<init> 1 0
<init> 1 0
swap 1 0
fromEither 1 0
$init$ 0 0
left 1 0
right 1 0
either 2 0
$init$ 0 0
disjunctionMonad 0 0
disjunctionShow 2 2
$init$ 0 0
<init> 1 0
left 0 0
right 0 0
<init> 1 0
asDisjunction 0 0
<init> 1 0
<init> 0 0
$init$ 0 0
downstarProfunctor 1 1
<init> 1 0
compose 2 1
fix 1 0
unfix 1 0
subst 1 0
liftLiskov 2 1
<init> 0 0
fix 1 0
unfix 1 0
subst 1 0
liftLiskov 2 1
$init$ 0 0
$init$ 0 0
apply 0 0
make 0 0
specialize 1 0
from 1 0
of 0 0
mk 1 1
instantiation 0 0
vacuous 0 0
monotonicity 1 0
$init$ 0 0
from 1 0
apply 1 0
<init> 0 0
unapply 0 0
<init> 0 0
from 1 0
specialize 1 0
of 0 0
instantiation 0 0
vacuous 0 0
monotonicity 1 0
<init> 1 0
from 1 0
$init$ 0 0
$init$ 0 0
apply 0 0
make 0 0
specialize 1 0
from 1 0
of 0 0
mk 1 1
$init$ 0 0
from 1 0
apply 1 0
<init> 0 0
unapply 0 0
<init> 0 0
from 1 0
specialize 1 0
of 0 0
<init> 1 0
from 1 0
$init$ 0 0
<init> 1 0
of 0 0
apply 0 0
<init> 0 0
$init$ 0 0
<init> 1 0
of 0 0
apply 0 0
<init> 0 0
<init> 1 0
retag 0 0
$init$ 0 0
strong 0 0
uncons 1 0
isCovariantInstance 0 0
<init> 0 0
uncons 1 0
<init> 0 0
liftLiskov 1 1
<init> 1 0
$init$ 0 0
<init> 0 0
map 2 0
ap 2 0
pure 1 0
flatMap 2 0
flatten 1 0
$init$ 0 0
subst 1 0
apply 1 0
coerce 1 0
andThen 1 0
compose 1 0
flip 0 0
lift 0 0
lift2 0 0
onCvF 1 0
onCtF 1 0
toPredef 0 0
toAs 0 0
<init> 0 0
apply 1 1
<init> 0 0
subst 1 0
refl 0 0
lift 1 0
lift2 2 0
lift3 3 0
<init> 1 0
apply 1 0
fromPredef 1 0
unsafeForce 0 0
<init> 0 0
subst 1 0
apply 1 0
coerce 1 0
andThen 1 0
compose 1 0
flip 0 0
lift 0 0
onCvF 1 0
onCtF 1 0
toPredef 0 0
toIs 0 0
toAs 0 0
toLiskov 0 0
<init> 0 0
apply 1 1
<init> 0 0
subst 1 0
refl 0 0
refl_ 0 0
coerce 2 0
compose 2 0
flip 1 0
lift 1 0
pair 2 0
<init> 2 0
bounded 0 0
subst 1 0
unbounded 0 0
lift2 2 0
lift3 3 0
fromPredef 1 0
fromIs 1 0
unsafeForce 0 0
<init> 0 0
substCv 1 0
substCt 1 0
apply 1 0
andThen 1 0
compose 1 0
coerce 1 0
onCvF 1 0
onCtF 1 0
toPredef 0 0
toAs 0 0
<init> 0 0
apply 1 1
<init> 0 0
substCv 1 0
refl 0 0
reify 0 0
compose 2 0
<init> 1 0
liftCvF 1 1
liftCtF 1 1
substCoF 2 1
substCt 2 1
bracket 2 0
fromPredef 1 0
fromAs 1 0
unsafeForce 0 0
$init$ 0 0
<init> 0 0
unapply 1 0
<init> 0 0
unapply 1 0
fold 3 0
empty 0 0
just 1 0
maybe 2 0
fromOption 1 0
toOption 1 0
isCovariant 0 0
monad 0 0
traversable 0 0
show 1 1
<init> 0 0
monadMaybe 0 0
traversableMaybe 0 0
isCovariantMaybe 0 0
showMaybe 1 1
<init> 0 0
empty 0 0
just 1 0
maybe 2 0
fromOption 1 0
toOption 1 0
isCovariant 0 0
monad 0 0
traversable 0 0
show 1 1
<init> 0 0
ap 2 0
flatMap 2 0
map 2 0
pure 1 0
traverse 3 1
sequence 2 1
foldLeft 3 0
foldRight 3 0
toList 1 0
$init$ 0 0
just2 2 0
empty2 0 0
isCovariant_1 0 0
isCovariant_2 0 0
show 2 2
<init> 0 0
unapply 1 0
<init> 0 0
unapply 1 0
fromOption2 1 0
toOption2 1 0
<init> 1 0
isEmpty 0 0
get 0 0
_1 0 0
_2 0 0
<init> 0 0
just2 2 0
empty2 0 0
isCovariant_1 0 0
isCovariant_2 0 0
show 2 2
fromOption2 1 0
toOption2 1 0
<init> 0 0
isEmpty 0 0
_1 0 0
_2 0 0
<init> 2 0
<init> 0 0
_1 0 0
_2 0 0
$init$ 0 0
empty2 0 0
just2 2 0
$init$ 0 0
empty 0 0
just 1 0
$init$ 0 0
<init> 1 0
asMaybe 0 0
<init> 1 0
just 0 0
<init> 0 0
fold 3 0
thisSide 0 0
thatSide 0 0
both 0 0
swap 0 0
bimap 2 0
lmap 1 0
rmap 1 0
ap 2 1
flatMap 2 1
foldMap 2 1
foldRight 2 0
foldLeft 2 0
traverse 2 1
append 3 2
lappend 2 1
rappend 2 1
<init> 1 0
pmap 0 0
<init> 1 0
pmap 0 0
<init> 2 0
<init> 0 0
apply 1 0
<init> 0 0
apply 1 0
<init> 0 0
apply 2 0
$init$ 0 0
theseMonad 1 1
theseTraversable 0 0
theseSemigroup 2 2
theseShow 2 2
<init> 1 0
$init$ 0 0
upstarProfunctor 1 1
<init> 2 0
$plus$colon 2 1
result 1 1
add 5 1
<init> 0 0
apply 1 0
leftAction 1 1
leftAction 2 1
<init> 1 0
$colon$plus 2 1
result 1 1
<init> 0 0
apply 1 0
wrap 1 0
rightAction 1 1
rightAction 2 1
flip 1 0
<init> 0 0
<init> 0 0
apply 2 0
unapply 1 0
of 0 0
<init> 0 0
fromLeft 1 0
compose 1 1
<init> 1 0
apply 2 0
<init> 0 0
fromRight 1 0
compose 1 1
<init> 1 0
apply 2 0
<init> 0 0
apply 0 0
pure 1 0
$init$ 0 0
applicative 0 0
<init> 0 0
$init$ 0 0
map 2 0
$init$ 0 0
<init> 1 0
pure 1 1
functor 0 0
ap 2 0
$init$ 0 0
apply 0 0
$init$ 0 0
<init> 2 1
ap 1 0
apply 0 0
flatMap 2 0
flatten 1 0
$init$ 0 0
bind 0 0
<init> 0 0
$init$ 0 0
ap 2 0
$init$ 0 0
flatMap 2 0
flatten 1 0
$init$ 0 0
flatten 1 0
flatMap 2 0
$init$ 0 0
flatMap 3 1
$init$ 0 0
<init> 2 1
flatMap 1 0
compose 0 0
id 0 0
$init$ 0 0
compose 0 0
id 0 0
profunctor 0 0
leftchoice 1 0
rightchoice 1 0
$init$ 0 0
choice 0 0
<init> 0 0
$init$ 0 0
leftchoice 1 0
rightchoice 1 0
$init$ 0 0
rightchoice 1 0
leftchoice 1 0
$init$ 0 0
<init> 0 0
dimap 3 0
lmap 2 0
rmap 2 0
leftchoice 1 0
rightchoice 1 0
$init$ 0 0
<init> 2 1
leftchoice 0 0
rightchoice 0 0
functor 0 0
cobind 2 0
cojoin 1 0
$init$ 0 0
cobind 0 0
<init> 0 0
$init$ 0 0
cojoin 1 0
cobind 2 0
$init$ 0 0
cojoin 1 0
cobind 2 0
$init$ 0 0
<init> 0 0
map 2 0
cobind 2 0
<init> 0 0
map 2 0
cobind 2 0
$init$ 0 0
<init> 2 1
cobind 1 0
cobind 0 0
copoint 1 0
<init> 0 0
apply 1 1
$init$ 0 0
comonad 0 0
<init> 0 0
$init$ 0 0
copoint 1 0
cojoin 1 0
cobind 2 0
$init$ 0 0
copoint 1 0
cojoin 1 0
cobind 2 0
$init$ 0 0
tuple2Cobind 0 0
<init> 0 0
map 2 0
cobind 2 0
copoint 1 0
$init$ 0 0
<init> 2 1
copoint 0 0
compose 2 0
$init$ 0 0
<init> 2 1
compose 1 0
contramap 2 0
$init$ 0 0
foldMap 3 1
foldRight 3 0
foldLeft 3 0
toList 1 0
$init$ 0 0
foldable 0 0
<init> 0 0
foldMap 3 1
foldRight 3 0
$init$ 0 0
foldRight 3 0
foldMap 3 1
$init$ 0 0
<init> 2 1
foldLeft 2 0
foldRight 2 0
foldMap 2 1
toList 0 0
map 2 0
$init$ 0 0
functor 0 0
$init$ 0 0
map 3 1
$init$ 0 0
<init> 2 1
map 1 0
void 0 0
imap 3 0
$init$ 0 0
functor 0 0
$init$ 0 0
imap 4 1
$init$ 0 0
<init> 2 1
imap 2 0
substCv 2 1
substCt 2 1
liftLiskov 1 1
widen 2 1
$init$ 0 0
isContravariant 0 0
<init> 0 0
$init$ 0 0
substCv 2 1
substCt 2 1
liftLiskov 1 1
widen 2 1
$init$ 0 0
substCt 2 1
substCv 2 1
liftLiskov 1 1
widen 2 1
$init$ 0 0
liftLiskov 1 1
substCv 2 1
substCt 2 1
widen 2 1
$init$ 0 0
scalaContravariant 0 0
substCv 2 1
substCt 2 1
liftLiskov 1 1
widen 2 1
$init$ 0 0
isCovariant 0 0
<init> 0 0
$init$ 0 0
substCv 2 1
substCt 2 1
liftLiskov 1 1
widen 2 1
$init$ 0 0
substCt 2 1
substCv 2 1
liftLiskov 1 1
widen 2 1
$init$ 0 0
liftLiskov 1 1
substCv 2 1
substCt 2 1
widen 2 1
$init$ 0 0
scalaCovariant 0 0
applicative 0 0
bind 0 0
$init$ 0 0
monad 0 0
<init> 0 0
$init$ 0 0
map 2 0
$init$ 0 0
<init> 0 0
ap 2 0
flatMap 2 0
map 2 0
pure 1 0
<init> 0 0
ap 2 0
flatMap 2 0
map 2 0
pure 1 0
<init> 0 0
ap 2 0
map 2 0
flatMap 2 0
pure 1 0
function1Monad 0 0
semigroup 0 0
empty 0 0
$init$ 0 0
monoid 0 0
$init$ 0 0
<init> 0 0
append 2 0
empty 0 0
pmap 1 0
$init$ 0 0
phantom 0 0
<init> 0 0
$init$ 0 0
map 2 0
contramap 2 0
$init$ 0 0
pmap 1 0
$init$ 0 0
pmap 2 1
$init$ 0 0
const 0 0
$init$ 0 0
<init> 2 1
pmap 0 0
lmap 2 0
rmap 2 0
dimap 3 0
$init$ 0 0
profunctor 0 0
<init> 0 0
$init$ 0 0
lmap 2 0
rmap 2 0
dimap 3 0
$init$ 0 0
dimap 3 0
lmap 2 0
rmap 2 0
$init$ 0 0
<init> 2 1
lmap 1 0
rmap 1 0
dimap 2 0
append 2 0
$init$ 0 0
semigroup 0 0
$init$ 0 0
<init> 2 1
append 1 0
show 1 0
<init> 0 0
fromToString 0 0
$init$ 0 0
stringShow 0 0
contravariantShow 0 0
$init$ 0 0
<init> 2 1
show 0 0
profunctor 0 0
first 1 0
second 1 0
$init$ 0 0
strong 0 0
<init> 0 0
$init$ 0 0
first 1 0
second 1 0
$init$ 0 0
second 1 0
first 1 0
$init$ 0 0
<init> 0 0
dimap 3 0
lmap 2 0
rmap 2 0
first 1 0
second 1 0
$init$ 0 0
<init> 2 1
first 0 0
second 0 0
functor 0 0
foldable 0 0
traverse 3 1
sequence 2 1
$init$ 0 0
traversable 0 0
<init> 0 0
$init$ 0 0
traverse 3 1
sequence 2 1
$init$ 0 0
sequence 2 1
traverse 3 1
$init$ 0 0
sequence 3 2
$init$ 0 0
<init> 0 0
traverse 3 1
foldLeft 3 0
foldRight 3 0
toList 1 0
map 2 0
tuple2Traversable 0 0
$init$ 0 0
<init> 2 1
traverse 2 1
<init> 2 0
peek 0 0
take 0 0
read 0 0
put 1 0
tryPut 1 0
tryTake 0 0
doPut 3 0
removePutter 2 0
removeTaker 2 0
removeReader 2 0
<init> 0 0
<init> 0 0
<init> 2 0
<init> 2 0
Empty 0 0
$init$ 0 0
unsafePerformIO 1 0
tryUnsafePerformIO 1 0
submit 1 0
schedule 2 0
<init> 0 0
nonFatal 1 0
<init> 0 0
<init> 0 0
<init> 0 0
<init> 0 0
Try 1 0
extract 1 0
nextInstr 2 0
<init> 0 0
apply 1 0
<init> 0 0
apply 1 0
<init> 1 0
apply 1 0
<init> 0 0
peek 0 0
isEmpty 0 0
push 1 0
pop 0 0
<init> 2 0
dispatchErrors 1 0
catchException 1 0
interruptStack 1 0
evaluate 1 0
fork 2 0
resumeEvaluate 1 0
resumeAsync 1 0
raceWith 4 0
interrupt 1 0
join 0 0
enterSupervision 0 0
supervise 1 0
enterAsyncStart 0 0
reentrancy 0 0
enterAsyncEnd 0 0
awaitAsync 2 0
resumeAsync 0 0
exitSupervision 1 0
shouldDie 0 0
ensuringUninterruptibleExit 1 0
enterUninterruptible 0 0
exitUninterruptible 0 0
register 1 0
done 1 0
kill0 2 0
kill1 2 0
join0 1 0
join1 1 0
mapExtract 1 0
purgeJoinersKillers 3 0
<init> 0 0
<init> 2 0
<init> 3 0
<init> 5 0
<init> 1 0
Initial 0 0
$init$ 0 0
run 1 0
main 1 0
<init> 0 0
putStr 1 0
putStrLn 1 0
<init> 0 0
fold 3 0
<init> 0 0
<init> 0 0
<init> 1 0
<init> 1 0
later 0 0
now 1 0
maybeLater 1 0
$init$ 0 0
succeeded 0 0
failed 0 0
fold 3 0
toDisjunction 0 0
<init> 0 0
<init> 1 0
<init> 1 0
<init> 1 0
<init> 0 0
<init> 1 0
<init> 1 0
$init$ 0 0
join 0 0
interrupt 1 0
interruptIgnore 1 0
<init> 0 0
map 1 0
flatMap 1 0
fork 0 0
fork0 1 0
par 1 0
race 1 0
raceWith 2 0
orElse 1 0
attempt 0 0
bracket 2 0
bracket0 2 0
bracket_ 2 0
ensuring 1 0
bracketOnError 2 0
onError 1 0
supervised 1 0
uninterruptibly 0 0
catchAll 1 0
catchSome 1 0
const 1 0
$times$greater 1 0
$less$times 1 0
forever 0 0
retry 0 0
retryN 1 0
retryFor 1 0
toUnit 0 0
peek 1 0
timeout 1 0
delay 1 0
tag 0 0
<init> 0 0
<init> 0 0
<init> 2 0
tag 0 0
<init> 1 0
tag 0 0
<init> 1 0
tag 0 0
<init> 1 0
tag 0 0
<init> 1 0
tag 0 0
<init> 1 0
tag 0 0
<init> 1 0
tag 0 0
<init> 2 0
tag 0 0
<init> 3 0
tag 0 0
<init> 1 0
tag 0 0
<init> 3 0
tag 0 0
<init> 1 0
tag 0 0
<init> 1 0
tag 0 0
<init> 2 0
tag 0 0
now 1 0
point 1 0
fail 1 0
sleep 1 0
supervise 2 0
flatten 1 0
suspend 1 0
sync 1 0
async 1 0
async0 1 0
never 0 0
absolve 1 0
require 1 0
$init$ 0 0
<init> 0 0
map 2 0
ap 2 0
pure 1 0
flatMap 2 0
<init> 1 0
read 0 0
write 1 0
modify 1 0
<init> 0 0
apply 1 0
peek 0 0
take 0 0
read 0 0
put 1 0
tryPut 1 0
tryTake 0 0
